name: '[docker] CI for docker/tag'

on:
    push:
        paths:
            - 'README.md'
            - 'ReleaseTag'

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
        -
            name: Checkout
            uses: actions/checkout@v2

        -
            name: Set env
            run: |
                echo ::set-env name=GITTAG::$(cat ReleaseTag)
                echo ::set-env name=GITHASH::$(cat ReleaseHash)
          
        - 
            name: Set up Golang
            uses: actions/setup-go@v1
            with:
                go-version: 1.15.x

        -
            name: Dockerhub login
            env:
                DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            run: |
                echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

        -
            name: Set up Docker Buildx
            id: buildx
            uses: crazy-max/ghaction-docker-buildx@v1
            with:
                buildx-version: latest
        -
            name: Checkout and crossbuild v2fly:tag
            run: |
               REPO=$(pwd)
               export GOPATH=$REPO/go
               mkdir -p $GOPATH/src/v2ray.com/core
               pushd $GOPATH/src/v2ray.com/core
               git clone --progress https://github.com/v2fly/v2ray-core.git .
               git checkout -b release_tag ${GITHASH}
               bash $REPO/ci-package.sh nosource noconf codename=${GITTAG} versiontag=${GITTAG} buildname=dockerfly-amd64 abpathtgz=$REPO/v2ray-amd64.tgz 
               bash $REPO/ci-package.sh nosource noconf codename=${GITTAG} versiontag=${GITTAG} buildname=dockerfly-arm64 arm64 abpathtgz=$REPO/v2ray-arm64.tgz 
               bash $REPO/ci-package.sh nosource noconf codename=${GITTAG} versiontag=${GITTAG} buildname=dockerfly-armv7 arm7 abpathtgz=$REPO/v2ray-armv7.tgz 

        -
            name: Build v2fly-tag (with docker push)
            env:
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            run: |
                docker buildx build \
                --platform=linux/amd64,linux/arm/v7,linux/arm64 \
                --output "type=image,push=true" \
                --file ./Dockerfile.X . \
                --tag $(echo "${DOCKER_USERNAME}" | tr '[:upper:]' '[:lower:]')/v2fly-core:${GITTAG}
        -
            name: Checkout and crossbuild v2fly:latest
            run: |
               REPO=$(pwd)
               rm -fv $REPO/v2ray-*.tgz
               export GOPATH=$REPO/go
               pushd $GOPATH/src/v2ray.com/core
               git fetch
               git checkout -b release_latest master
               HASH=$(git rev-parse --short HEAD)
               bash $REPO/ci-package.sh nosource noconf codename=v2fly/${HASH} versiontag=${GITTAG} buildname=dockerfly-amd64 abpathtgz=$REPO/v2ray-amd64.tgz 
               bash $REPO/ci-package.sh nosource noconf codename=v2fly/${HASH} versiontag=${GITTAG} buildname=dockerfly-arm64 arm64 abpathtgz=$REPO/v2ray-arm64.tgz 
               bash $REPO/ci-package.sh nosource noconf codename=v2fly/${HASH} versiontag=${GITTAG} buildname=dockerfly-armv7 arm7 abpathtgz=$REPO/v2ray-armv7.tgz 

        -
            name: Build v2fly:latest (with docker push)
            env:
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            run: |
                docker buildx build \
                --platform=linux/amd64,linux/arm/v7,linux/arm64 \
                --output "type=image,push=true" \
                --file ./Dockerfile.X . \
                --tag $(echo "${DOCKER_USERNAME}" | tr '[:upper:]' '[:lower:]')/v2fly-core:latest

